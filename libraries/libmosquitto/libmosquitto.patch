--- lib/mosquitto.h.orig  2016-02-14 06:36:55.000000000 -0800
+++ lib/mosquitto.h 2016-03-21 15:01:28.000000000 -0700
@@ -21,15 +21,7 @@
 extern "C" {
 #endif
 
-#if defined(WIN32) && !defined(WITH_BROKER)
-#  ifdef libmosquitto_EXPORTS
-#    define libmosq_EXPORT  __declspec(dllexport)
-#  else
-#    define libmosq_EXPORT  __declspec(dllimport)
-#  endif
-#else
-#  define libmosq_EXPORT
-#endif
+#define libmosq_EXPORT
 
 #ifdef WIN32
 #  ifndef __cplusplus
--- lib/net_mosq.c.orig 2016-02-14 06:36:55.000000000 -0800
+++ lib/net_mosq.c  2016-03-21 15:01:28.000000000 -0700
@@ -276,7 +276,7 @@
 	int s;
 	int rc;
 #ifdef WIN32
-	uint32_t val = 1;
+	u_long val = 1;
 #endif
 
 	*sock = INVALID_SOCKET;
--- lib/time_mosq.c.orig 2016-02-14 06:36:55.000000000 -0800
+++ lib/time_mosq.c 2016-03-21 15:01:28.000000000 -0700
@@ -30,6 +30,7 @@
 #include "mosquitto.h"
 #include "time_mosq.h"
 
+/*
 #ifdef WIN32
 static bool tick64 = false;
 
@@ -48,15 +49,15 @@
 	}
 }
 #endif
+*/
 
 time_t mosquitto_time(void)
 {
 #ifdef WIN32
-	if(tick64){
-		return GetTickCount64()/1000;
-	}else{
-		return GetTickCount()/1000; /* FIXME - need to deal with overflow. */
-	}
+  static time_t prv=0, ofs=0;
+  time_t cur = GetTickCount()/1000;
+  if (cur<prv) ofs+=prv; prv=cur;
+  return cur+ofs;
 #elif _POSIX_TIMERS>0 && defined(_POSIX_MONOTONIC_CLOCK)
 	struct timespec tp;
 
--- lib/util_mosq.c.orig  2016-02-14 06:36:55.000000000 -0800
+++ lib/util_mosq.c 2016-03-21 15:01:28.000000000 -0700
@@ -19,6 +19,9 @@
 
 #ifdef WIN32
 #include <winsock2.h>
+
+char* strtok_r( char *, const char *, char **);
+
 #endif


--- lib/mosquitto_internal.h.orig 2016-03-21 15:07:15.000000000 -0700
+++ lib/mosquitto_internal.h  2016-03-21 15:07:37.000000000 -0700
@@ -42,6 +42,7 @@
 
 #ifdef WIN32
 #  if _MSC_VER < 1600
+   typedef char int8_t;
    typedef unsigned char uint8_t;
    typedef unsigned short uint16_t;
 
