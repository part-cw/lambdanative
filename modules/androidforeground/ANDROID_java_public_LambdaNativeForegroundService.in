/* -*- mode: java; c-basic-offset: 2; -*-  */

package @SYS_PACKAGE_DOT@;
@IF_ANDROIDAPI_GT_25@
  import android.app.NotificationChannel;
import android.app.NotificationManager;
/* end of IF_ANDROIDAPI_GT_25 */

import android.util.Log;
import android.app.Service;
import android.app.Notification;
import android.app.Notification.Builder;

//import android.support.v4.app.NotificationCompat;

import android.content.Intent;
import android.os.IBinder;
import android.os.SystemClock;

public class LambdaNativeForegroundService extends Service {
  final static int notificationIsRunningId = 1;
  boolean running=true;
  Thread backgroundThread;
  public LambdaNativeForegroundService() {
  }
  private Notification.Builder make_notification_template() {
    return new Notification.Builder(this)
      .setContentTitle(getString(R.string.app_name))
      // .setContentText("TBD")
      .setSmallIcon(R.drawable.icon)
      // .setLargeIcon(aBitmap)
      .setOngoing(true);
  }
  private void keepAwake_LT_API26() {
    startForeground(notificationIsRunningId, make_notification_template().build());
  }
  private void keepAwake() {
    @IF_ANDROIDAPI_GT_25@
      if(true) {
        NotificationManager mgr = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        assert mgr != null;
        NotificationChannel channel =
          new NotificationChannel ("@SYS_PACKAGE_DOT@", ".working", NotificationManager.IMPORTANCE_NONE);
        mgr.createNotificationChannel(channel);
        Notification.Builder mknote = make_notification_template()
          .setChannelId("@SYS_PACKAGE_DOT@")
          .setCategory(Notification.CATEGORY_SERVICE);
        startForeground(notificationIsRunningId, mknote.build());
        return;
      }
    /* end of IF_ANDROIDAPI_GT_25 */
    keepAwake_LT_API26();
  }
  @Override
  public IBinder onBind(Intent intent) {
    throw new UnsupportedOperationException("Not implemented");
  }
  @Override
  public void onCreate() {
    //    Log.d("","LambdaNativeForegroundService created");
    super.onCreate();
    keepAwake();
  }
  @Override
  public void onStart(Intent intent, int startId) {
    //    Log.d("","LambdaNativeForegroundService starting");
  }
  @Override public int onStartCommand(Intent intent, int flags, int startId) {
    super.onStartCommand(intent, flags, startId);
    return START_STICKY;
  }
  @Override
  public void onDestroy() {
    //    running=false;
    //    Log.d("","LambdaNativeForegroundService stopped");
  }
  // This is bound in the main class only!!!  native void nativeEvent(int t, int x, int y);
}
