#!/bin/sh
# LambdaNative - a cross-platform Scheme framework
# Copyright (c) 2009-2013, University of British Columbia
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the
# following conditions are met:
#
# * Redistributions of source code must retain the above
# copyright notice, this list of conditions and the following
# disclaimer.
#
# * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials
# provided with the distribution.
#
# * Neither the name of the University of British Columbia nor
# the names of its contributors may be used to endorse or
# promote products derived from this software without specific
# prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if [ "X$ANDROIDARCH" = "X" ]; then
  ANDROIDARCH=arm
fi

TOOLCHAIN=`wildcard_dir $ANDROIDNDK/toolchains/${ANDROIDARCH}*-4.8/prebuilt/*-x86 2> /dev/null`
if [ "X$TOOLCHAIN" = "X" ]; then
  TOOLCHAIN=`wildcard_dir $ANDROIDNDK/toolchains/${ANDROIDARCH}*-4.8/prebuilt/*-x86_64 2> /dev/null`
fi
assertfile "$TOOLCHAIN"
SYSROOT=`echo $ANDROIDNDK/platforms/android-${ANDROIDAPI}/arch-${ANDROIDARCH}`
if [ ! -d "$SYSROOT" ]; then
  API=${ANDROIDAPI}
  while [ $API -ge 3 ]; do
    SYSROOT=`echo $ANDROIDNDK/platforms/android-${API}/arch-${ANDROIDARCH}`
    if [ -d "$SYSROOT" ] ; then
      break
    fi
    API=`expr $API - 1`
  done
fi
assertfile "$SYSROOT"

CROSS=`ls -1 $TOOLCHAIN/bin/*-gcc | sed 's/gcc$//'`
# the linker gunk is just to fool gambit's configure into thinking the gcc can make binaries
SYS_CC=$CROSS"gcc $SYS_DEBUGFLAG -DANDROID -isysroot $SYSROOT -fno-short-enums -nostdlib -I$SYSROOT/usr/include -L$SYSROOT/usr/lib -lstdc++ -lc -ldl -lgcc"
SYS_AR=$CROSS"ar"
SYS_RANLIB=$CROSS"ranlib"
SYS_STRIP=$CROSS"strip"
SYS_WINDRES=
SYS_EXEFIX=
SYS_APPFIX=

#eof
